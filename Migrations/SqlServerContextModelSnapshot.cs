// <auto-generated />
using System;
using API_FARMACIA_PM.Data.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_FARMACIA_PM.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_FARMACIA_PM.Models.DiscountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("StoreModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreModelId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.StoreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.TypeUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountModelId");

                    b.ToTable("TypeUsers");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.ProductModel", b =>
                {
                    b.HasOne("API_FARMACIA_PM.Models.StoreModel", null)
                        .WithMany("Products")
                        .HasForeignKey("StoreModelId");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.TypeUserModel", b =>
                {
                    b.HasOne("API_FARMACIA_PM.Models.DiscountModel", null)
                        .WithMany("TypeUser")
                        .HasForeignKey("DiscountModelId");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.UserModel", b =>
                {
                    b.HasOne("API_FARMACIA_PM.Models.TypeUserModel", "TypeUser")
                        .WithMany("User")
                        .HasForeignKey("TypeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeUser");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.DiscountModel", b =>
                {
                    b.Navigation("TypeUser");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.StoreModel", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("API_FARMACIA_PM.Models.TypeUserModel", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
